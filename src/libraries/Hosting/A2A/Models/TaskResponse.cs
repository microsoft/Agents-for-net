// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json.Serialization;

namespace Microsoft.Agents.Hosting.A2A.Models
{
    /// <summary>
    /// Represents the stateful unit of work being processed by the A2A Server for an 
    /// A2A Client. A task encapsulates the entire interaction related to a specific 
    /// goal or request.
    /// </summary>
    public record TaskResponse
    {
        public string Kind { get; } = "task";

        /// <summary>
        /// Server generated unique task identifier (e.g., UUID)
        /// </summary>
        [JsonPropertyName("id")]
        public required string Id { get; init; }

        /// <summary>
        /// Server generated ID for contextual alignment across interactions
        /// </summary>
        [JsonPropertyName("contextId")]
        public required string ContextId { get; init; }

        /// <summary>
        /// Current status of the task (state, message, timestamp).
        /// </summary>
        [JsonPropertyName("status")]
        public required TaskStatus Status { get; init; }

        /// <summary>
        /// Array of outputs generated by the agent for this task.
        /// </summary>
        [JsonPropertyName("artifacts")]
        public ImmutableArray<Artifact>? Artifacts { get; init; }

        /// <summary>
        /// Optional array of recent messages exchanged, if requested by historyLength.
        /// </summary>
        [JsonPropertyName("history")]
        public ImmutableArray<Message>? History { get; init; }

        /// <summary>
        /// Arbitrary key-value metadata associated with the task.
        /// </summary>
        [JsonPropertyName("metadata")]
        public IReadOnlyDictionary<string, object>? Metadata { get; set; }
    }
}