// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Text.Json.Serialization;

namespace Microsoft.Agents.Hosting.A2A.Protocol;

/// <summary>
/// Represents a file, data structure, or other resource generated by an agent during a task.
/// </summary>
public sealed class Artifact
{
    public static readonly Artifact Empty = new() { ArtifactId = Guid.NewGuid().ToString("N") };

    /// <summary>
    /// A unique identifier for the artifact within the scope of the task.
    /// </summary>
    [JsonPropertyName("artifactId")]
    public required string ArtifactId { get; set; }

    /// <summary>
    /// An optional, human-readable name for the artifact.
    /// </summary>
    [JsonPropertyName("name")]
    public string? Name { get; set; }

    /// <summary>
    /// An optional, human-readable description of the artifact.
    /// </summary>
    [JsonPropertyName("description")]
    public string? Description { get; set; }

    /// <summary>
    /// An array of content parts that make up the artifact.
    /// </summary>
    [JsonPropertyName("parts")]
    public ImmutableArray<Part> Parts { get; set; } = [];

    /// <summary>
    /// Optional metadata for extensions. The key is an extension-specific identifier.
    /// </summary>
    [JsonPropertyName("metadata")]
    public IReadOnlyDictionary<string, object>? Metadata { get; set; }

    /// <summary>
    /// The URIs of extensions that are relevant to this artifact.
    /// </summary>
    [JsonPropertyName("extensions")]
    public ImmutableArray<string>? Extensions { get; set; }
}